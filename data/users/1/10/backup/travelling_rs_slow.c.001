/*  inefficient solution:
    use bellman-ford to find the shortest path between each pair of cities.
    O(n^4)
*/
#include <stdio.h>
#define INF 700000000
int a[201],f[200][200],n;
int bellmanford(int start,int goal) {
  int d[200],i,j,change;
  for(i=0;i<n;i++) d[i]=INF;
  d[start]=0;
  do {
    change=0;
    for(i=0;i<n;i++) for(j=0;j<n;j++) if(i!=j && f[i][j]<INF)
      if(d[i]+f[i][j]<d[j]) d[j]=d[i]+f[i][j],change=1;
  } while(change);
  return d[goal];
}
int main() {
  int cases,i,j,k,z;
  scanf("%d",&cases);
  while(cases--) {
    scanf("%d",&n);
    for(i=0;i<n;i++) scanf("%d",&a[i]);
    for(i=0;i<n;i++) for(j=0;j<n;j++) {
      scanf("%d",&f[i][j]);
      if(f[i][j]<0) f[i][j]=INF;
    }
    for(a[n]=a[0],z=i=0;i<n;i++) {
      k=bellmanford(a[i],a[i+1]);
      if(k==INF) goto failed;
      z+=k;
    }
    printf("%d\n",z);
    continue;
  failed:;
    puts("impossible");
  }
  return 0;
}
